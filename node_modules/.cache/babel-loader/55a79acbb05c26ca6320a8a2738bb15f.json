{"ast":null,"code":"var _jsxFileName = \"/Users/deethegreat/Desktop/Pomodoro-Clock/pomodoroclock/src/components/TimerInterval/Timer.js\";\nimport React from \"react\";\nimport \"./TimerInterval.css\";\n\nclass Timer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      timerSeconds: 0,\n      intervalId: \"\",\n      isSessionInterval: true\n    };\n    this.playStopTimer = this.playStopTimer.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n  }\n\n  playStopTimer(event) {\n    const action = event.target.dataset.type;\n\n    switch (action) {\n      case \"play\":\n        this.props.onPlayChange(true);\n        this.decreaseTimer();\n        break;\n\n      case \"stop\":\n        this.props.onPlayChange(false);\n        clearInterval(this.state.intervalId);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  decreaseTimer() {\n    let intervalId = setInterval(() => {\n      switch (this.state.timerSeconds) {\n        case 0:\n          if (this.props.timerMinute === 0) {\n            if (this.state.isSessionInterval) {\n              // start break timer\n              this.setState({\n                isSessionInterval: false\n              });\n              this.props.onTimerMinuteChange(this.props.breakInterval);\n            } else {\n              // start session timer\n              this.setState({\n                isSessionInterval: true\n              });\n              this.props.onTimerMinuteChange(this.props.sessionInterval);\n            }\n          } else {\n            this.props.onTimerMinuteChange(this.props.timerMinute - 1);\n            this.setState({\n              timerSeconds: 59\n            });\n          }\n\n          break;\n\n        default:\n          this.setState({\n            timerSeconds: this.state.timerSeconds - 1\n          });\n          break;\n      }\n    }, 1000);\n    this.setState({\n      intervalId: intervalId\n    });\n  }\n\n  resetTimer() {\n    clearInterval(this.state.intervalId);\n    this.props.resetTimer();\n    this.props.onPlayChange(false);\n    this.setState({\n      timerSeconds: 0\n    });\n  }\n\n  render() {\n    let timerClass = this.props.timerMinute === 0 ? \"timer-alert\" : \"\";\n    timerClass += \" session-timer\";\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      id: \"session-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"session-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.isSessionInterval ? \"Session\" : \"Break\", \" :\"), React.createElement(\"span\", {\n      className: timerClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.props.timerMinute), React.createElement(\"span\", {\n      className: timerClass,\n      id: \"colon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \":\"), React.createElement(\"span\", {\n      style: {\n        color: \"white\"\n      },\n      className: timerClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.state.timerSeconds === 0 ? \"00\" : this.state.timerSeconds < 10 ? \"0\" + this.state.timerSeconds : this.state.timerSeconds)), React.createElement(\"section\", {\n      id: \"actions-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      \"data-type\": \"play\",\n      onClick: this.playStopTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Play\"), React.createElement(\"button\", {\n      \"data-type\": \"stop\",\n      onClick: this.playStopTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Stop\"), React.createElement(\"button\", {\n      onClick: this.resetTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Refresh\")));\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["/Users/deethegreat/Desktop/Pomodoro-Clock/pomodoroclock/src/components/TimerInterval/Timer.js"],"names":["React","Timer","Component","constructor","state","timerSeconds","intervalId","isSessionInterval","playStopTimer","bind","resetTimer","event","action","target","dataset","type","props","onPlayChange","decreaseTimer","clearInterval","setInterval","timerMinute","setState","onTimerMinuteChange","breakInterval","sessionInterval","render","timerClass","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./TimerInterval.css\";\n\nclass Timer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      timerSeconds: 0,\n      intervalId: \"\",\n      isSessionInterval: true\n    };\n\n    this.playStopTimer = this.playStopTimer.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n  }\n\n  playStopTimer(event) {\n    const action = event.target.dataset.type;\n\n    switch (action) {\n      case \"play\":\n        this.props.onPlayChange(true);\n        this.decreaseTimer();\n        break;\n      case \"stop\":\n        this.props.onPlayChange(false);\n        clearInterval(this.state.intervalId);\n        break;\n      default:\n        break;\n    }\n  }\n\n  decreaseTimer() {\n    let intervalId = setInterval(() => {\n      switch (this.state.timerSeconds) {\n        case 0:\n          if (this.props.timerMinute === 0) {\n            if (this.state.isSessionInterval) {\n              // start break timer\n              this.setState({\n                isSessionInterval: false\n              });\n\n              this.props.onTimerMinuteChange(this.props.breakInterval);\n            } else {\n              // start session timer\n              this.setState({\n                isSessionInterval: true\n              });\n\n              this.props.onTimerMinuteChange(this.props.sessionInterval);\n            }\n          } else {\n            this.props.onTimerMinuteChange(this.props.timerMinute - 1);\n            this.setState({\n              timerSeconds: 59\n            });\n          }\n          break;\n        default:\n          this.setState({\n            timerSeconds: this.state.timerSeconds - 1\n          });\n          break;\n      }\n    }, 1000);\n\n    this.setState({\n      intervalId: intervalId\n    });\n  }\n\n  resetTimer() {\n    clearInterval(this.state.intervalId);\n\n    this.props.resetTimer();\n    this.props.onPlayChange(false);\n\n    this.setState({\n      timerSeconds: 0\n    });\n  }\n\n  render() {\n    let timerClass = this.props.timerMinute === 0 ? \"timer-alert\" : \"\";\n    timerClass += \" session-timer\";\n    return (\n      <section>\n        <section id=\"session-container\">\n          <h4 className=\"session-header\">\n            {this.state.isSessionInterval ? \"Session\" : \"Break\"} :\n          </h4>\n          <span className={timerClass}>{this.props.timerMinute}</span>\n          <span className={timerClass} id=\"colon\">\n            :\n          </span>\n          <span style={{ color: \"white\" }} className={timerClass}>\n            {this.state.timerSeconds === 0\n              ? \"00\"\n              : this.state.timerSeconds < 10\n              ? \"0\" + this.state.timerSeconds\n              : this.state.timerSeconds}\n          </span>\n        </section>\n        <section id=\"actions-container\">\n          <button data-type=\"play\" onClick={this.playStopTimer}>\n            Play\n          </button>\n          <button data-type=\"stop\" onClick={this.playStopTimer}>\n            Stop\n          </button>\n          <button onClick={this.resetTimer}>Refresh</button>\n        </section>\n      </section>\n    );\n  }\n}\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}