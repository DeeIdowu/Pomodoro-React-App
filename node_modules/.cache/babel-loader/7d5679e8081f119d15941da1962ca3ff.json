{"ast":null,"code":"var _jsxFileName = \"/Users/deethegreat/Desktop/Pomodoro-Clock/pomodoroclock/src/App.js\";\nimport React from \"react\";\nimport BreakInterval from \"../src/components/BreakInterval/BreakInterval\";\nimport SessionInterval from \"../src/components/SessionInterval/SessionInterval\";\nimport TimerInterval from \"../src/components/TimerInterval/Timer\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      breakLength: 10,\n      sessionLength: 35,\n      timerMinute: 35,\n      isPlay: false\n    };\n    this.onIncreaseBreakLength = this.onIncreaseBreakLength.bind(this);\n    this.onDecreaseBreakLength = this.onDecreaseBreakLength.bind(this);\n    this.onIncreaseSessionLength = this.onIncreaseSessionLength.bind(this);\n    this.onDecreaseSessionLength = this.onDecreaseSessionLength.bind(this);\n    this.onUpdateTimerMinute = this.onUpdateTimerMinute.bind(this);\n    this.onToggleInterval = this.onToggleInterval.bind(this);\n    this.onResetTimer = this.onResetTimer.bind(this);\n  }\n\n  onIncreaseBreakLength() {\n    this.setState(prevState => {\n      return {\n        breakLength: prevState.breakLength + 1\n      };\n    });\n  }\n\n  onDecreaseBreakLength() {\n    this.setState(prevState => {\n      return {\n        breakLength: prevState.breakLength - 1\n      };\n    });\n  }\n\n  onIncreaseSessionLength() {\n    this.setState(prevState => {\n      return {\n        sessionLength: prevState.sessionLength + 1,\n        timerMinute: prevState.sessionLength + 1\n      };\n    });\n  }\n\n  onDecreaseSessionLength() {\n    this.setState(prevState => {\n      return {\n        sessionLength: prevState.sessionLength - 1,\n        timerMinute: prevState.sessionLength - 1\n      };\n    });\n  }\n\n  onUpdateTimerMinute() {\n    this.setState(prevState => {\n      return {\n        timerMinute: prevState.timerMinute - 1\n      };\n    });\n  }\n\n  onToggleInterval(isSession) {\n    if (isSession) {\n      this.setState({\n        timerMinute: this.state.sessionLength\n      });\n    } else {\n      this.setState({\n        timerMinute: this.state.breakLength\n      });\n    }\n  }\n\n  onResetTimer() {\n    this.setState({\n      timerMinute: this.state.sessionLength\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Pomodoro Clock\"), React.createElement(\"section\", {\n      className: \"length-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(BreakInterval, {\n      breakLength: this.state.breakLength,\n      increaseBreak: this.onIncreaseBreakLength,\n      decreaseBreak: this.onDecreaseBreakLength,\n      isPlay: this.state.isPlay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(SessionInterval, {\n      sessionLength: this.state.sessionLength,\n      increaseSession: this.onIncreaseSessionLength,\n      decreaseSession: this.onDecreaseSessionLength,\n      isPlay: this.state.isPlay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(TimerInterval, {\n      timerMinute: this.state.timerMinute,\n      breakTimer: this.state.breakLength,\n      updateTimerMinute: this.onUpdateTimerMinute,\n      toggleInterval: this.onToggleInterval,\n      resetTimer: this.onResetTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/deethegreat/Desktop/Pomodoro-Clock/pomodoroclock/src/App.js"],"names":["React","BreakInterval","SessionInterval","TimerInterval","App","Component","constructor","state","breakLength","sessionLength","timerMinute","isPlay","onIncreaseBreakLength","bind","onDecreaseBreakLength","onIncreaseSessionLength","onDecreaseSessionLength","onUpdateTimerMinute","onToggleInterval","onResetTimer","setState","prevState","isSession","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport BreakInterval from \"../src/components/BreakInterval/BreakInterval\";\nimport SessionInterval from \"../src/components/SessionInterval/SessionInterval\";\nimport TimerInterval from \"../src/components/TimerInterval/Timer\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      breakLength: 10,\n      sessionLength: 35,\n      timerMinute: 35,\n      isPlay: false\n    };\n\n    this.onIncreaseBreakLength = this.onIncreaseBreakLength.bind(this);\n    this.onDecreaseBreakLength = this.onDecreaseBreakLength.bind(this);\n    this.onIncreaseSessionLength = this.onIncreaseSessionLength.bind(this);\n    this.onDecreaseSessionLength = this.onDecreaseSessionLength.bind(this);\n    this.onUpdateTimerMinute = this.onUpdateTimerMinute.bind(this);\n    this.onToggleInterval = this.onToggleInterval.bind(this);\n    this.onResetTimer = this.onResetTimer.bind(this);\n  }\n\n  onIncreaseBreakLength() {\n    this.setState(prevState => {\n      return {\n        breakLength: prevState.breakLength + 1\n      };\n    });\n  }\n\n  onDecreaseBreakLength() {\n    this.setState(prevState => {\n      return {\n        breakLength: prevState.breakLength - 1\n      };\n    });\n  }\n\n  onIncreaseSessionLength() {\n    this.setState(prevState => {\n      return {\n        sessionLength: prevState.sessionLength + 1,\n        timerMinute: prevState.sessionLength + 1\n      };\n    });\n  }\n\n  onDecreaseSessionLength() {\n    this.setState(prevState => {\n      return {\n        sessionLength: prevState.sessionLength - 1,\n        timerMinute: prevState.sessionLength - 1\n      };\n    });\n  }\n\n  onUpdateTimerMinute() {\n    this.setState(prevState => {\n      return {\n        timerMinute: prevState.timerMinute - 1\n      };\n    });\n  }\n\n  onToggleInterval(isSession) {\n    if (isSession) {\n      this.setState({\n        timerMinute: this.state.sessionLength\n      });\n    } else {\n      this.setState({\n        timerMinute: this.state.breakLength\n      });\n    }\n  }\n\n  onResetTimer() {\n    this.setState({\n      timerMinute: this.state.sessionLength\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h2>Pomodoro Clock</h2>\n        <section className=\"length-container\">\n          <BreakInterval\n            breakLength={this.state.breakLength}\n            increaseBreak={this.onIncreaseBreakLength}\n            decreaseBreak={this.onDecreaseBreakLength}\n            isPlay={this.state.isPlay}\n          />\n          <SessionInterval\n            sessionLength={this.state.sessionLength}\n            increaseSession={this.onIncreaseSessionLength}\n            decreaseSession={this.onDecreaseSessionLength}\n            isPlay={this.state.isPlay}\n          />\n        </section>\n        <TimerInterval\n          timerMinute={this.state.timerMinute}\n          breakTimer={this.state.breakLength}\n          updateTimerMinute={this.onUpdateTimerMinute}\n          toggleInterval={this.onToggleInterval}\n          resetTimer={this.onResetTimer}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}